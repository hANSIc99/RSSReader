!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
0	doxy_doku/html/search/searchdata.js	/^{$/;"	p	class:indexSectionLabels
0	doxy_doku/html/search/searchdata.js	/^{$/;"	p	class:indexSectionNames
0	doxy_doku/html/search/searchdata.js	/^{$/;"	p	class:indexSectionsWithContent
1	doxy_doku/html/search/searchdata.js	/^  0: "All",$/;"	p	class:indexSectionLabels
1	doxy_doku/html/search/searchdata.js	/^  0: "akmrst",$/;"	p	class:indexSectionsWithContent
1	doxy_doku/html/search/searchdata.js	/^  0: "all",$/;"	p	class:indexSectionNames
2	doxy_doku/html/search/searchdata.js	/^  1: "Data Structures",$/;"	p	class:indexSectionLabels
2	doxy_doku/html/search/searchdata.js	/^  1: "classes",$/;"	p	class:indexSectionNames
2	doxy_doku/html/search/searchdata.js	/^  1: "st",$/;"	p	class:indexSectionsWithContent
3	doxy_doku/html/search/searchdata.js	/^  2: "Files",$/;"	p	class:indexSectionLabels
3	doxy_doku/html/search/searchdata.js	/^  2: "files",$/;"	p	class:indexSectionNames
3	doxy_doku/html/search/searchdata.js	/^  2: "m",$/;"	p	class:indexSectionsWithContent
4	doxy_doku/html/search/searchdata.js	/^  3: "Functions",$/;"	p	class:indexSectionLabels
4	doxy_doku/html/search/searchdata.js	/^  3: "functions",$/;"	p	class:indexSectionNames
4	doxy_doku/html/search/searchdata.js	/^  3: "k",$/;"	p	class:indexSectionsWithContent
Activate	doxy_doku/html/search/search.js	/^  this.Activate = function(isActive)$/;"	m	class:SearchBox
BADARG	cmd_args.h	42;"	d
CC	Makefile	/^CC=gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS= -c -Wall -std=c11 -Wextra -pedantic -Woverlength-strings -g -O0 -I \/usr\/local\/include\/libxml2\/  -D_POSIX_C_SOURCE=200112L  -D_GNU_SOURCE $/;"	m
CloseResultsWindow	doxy_doku/html/search/search.js	/^  this.CloseResultsWindow = function()$/;"	m	class:SearchBox
CloseSelectionWindow	doxy_doku/html/search/search.js	/^  this.CloseSelectionWindow = function()$/;"	m	class:SearchBox
DEBUG	cmd_args.c	26;"	d	file:
DEBUG	main.c	48;"	d	file:
DEBUG	req_data.c	25;"	d	file:
DEBUG	update_service.c	27;"	d	file:
DEBUG	xml_handler.c	27;"	d	file:
DELAY_CON_LOST	update_service.c	26;"	d	file:
DELAY_MILLI	update_service.c	25;"	d	file:
DELAY_SEC	main.c	50;"	d	file:
DEPS	Makefile	/^DEPS = req_data.h xml_handler.h struct.h update_service.h text.h cmd_args.h json_machine.h$/;"	m
DOM	cmd_args.h	34;"	d
DOMPopupSearchResults	doxy_doku/html/search/search.js	/^  this.DOMPopupSearchResults = function()$/;"	m	class:SearchBox
DOMPopupSearchResultsWindow	doxy_doku/html/search/search.js	/^  this.DOMPopupSearchResultsWindow = function()$/;"	m	class:SearchBox
DOMSearchBox	doxy_doku/html/search/search.js	/^  this.DOMSearchBox = function()$/;"	m	class:SearchBox
DOMSearchClose	doxy_doku/html/search/search.js	/^  this.DOMSearchClose = function()$/;"	m	class:SearchBox
DOMSearchField	doxy_doku/html/search/search.js	/^  this.DOMSearchField = function()$/;"	m	class:SearchBox
DOMSearchSelect	doxy_doku/html/search/search.js	/^  this.DOMSearchSelect = function()$/;"	m	class:SearchBox
DOMSearchSelectWindow	doxy_doku/html/search/search.js	/^  this.DOMSearchSelectWindow = function()$/;"	m	class:SearchBox
DOM_LONG	cmd_args.h	35;"	d
EXT_ARG_VAL	cmd_args.h	45;"	d
FindChildElement	doxy_doku/html/search/search.js	/^    this.FindChildElement = function(id)$/;"	m	class:SearchResults
HTTP	cmd_args.h	37;"	d
JSON	cmd_args.h	41;"	d
KEYWORD	cmd_args.h	40;"	d
LIBS	Makefile	/^LIBS = -L\/usr\/local\/lib -lm -ljansson -lxml2  $/;"	m
MARKUP_START	xml_handler.c	30;"	d	file:
MAXDATASIZE	req_data.h	36;"	d
MAX_DOMAIN_LENGHT	struct.h	30;"	d
MAX_REQUEST_LENGHT	struct.h	31;"	d
NKEYS	cmd_args.h	44;"	d
Nav	doxy_doku/html/search/search.js	/^    this.Nav = function(evt,itemIndex)$/;"	m	class:SearchResults
NavChild	doxy_doku/html/search/search.js	/^    this.NavChild = function(evt,itemIndex,childIndex)$/;"	m	class:SearchResults
NavNext	doxy_doku/html/search/search.js	/^    this.NavNext = function(index)$/;"	m	class:SearchResults
NavPrev	doxy_doku/html/search/search.js	/^    this.NavPrev = function(index)$/;"	m	class:SearchResults
OBJ	Makefile	/^OBJ = main.o req_data.o xml_handler.o update_service.o cmd_args.o json_machine.o$/;"	m
OnSearchFieldChange	doxy_doku/html/search/search.js	/^  this.OnSearchFieldChange = function(evt)$/;"	m	class:SearchBox
OnSearchFieldFocus	doxy_doku/html/search/search.js	/^  this.OnSearchFieldFocus = function(isActive)$/;"	m	class:SearchBox
OnSearchSelectHide	doxy_doku/html/search/search.js	/^  this.OnSearchSelectHide = function()$/;"	m	class:SearchBox
OnSearchSelectKey	doxy_doku/html/search/search.js	/^  this.OnSearchSelectKey = function(evt)$/;"	m	class:SearchBox
OnSearchSelectShow	doxy_doku/html/search/search.js	/^  this.OnSearchSelectShow = function()$/;"	m	class:SearchBox
OnSelectItem	doxy_doku/html/search/search.js	/^  this.OnSelectItem = function(id)$/;"	m	class:SearchBox
PORT	req_data.h	35;"	d
POSIX_C_SOURCE	main.c	37;"	d	file:
PRINT	cmd_args.h	38;"	d
PRINT_OUT	main.c	49;"	d	file:
ProcessKeys	doxy_doku/html/search/search.js	/^    this.ProcessKeys = function(e)$/;"	m	class:SearchResults
READ	xml_handler.c	31;"	d	file:
REQ1	req_data.c	27;"	d	file:
REQ2	req_data.c	28;"	d	file:
REQ3	req_data.c	29;"	d	file:
RSS_END	xml_handler.c	28;"	d	file:
RSS_START	xml_handler.c	29;"	d	file:
START_SUBADDR	cmd_args.h	32;"	d
Search	doxy_doku/html/search/search.js	/^    this.Search = function(search)$/;"	m	class:SearchResults
Search	doxy_doku/html/search/search.js	/^  this.Search = function()$/;"	m	class:SearchBox
SearchBox	doxy_doku/html/search/search.js	/^function SearchBox(name, resultsPath, inFrame, label)$/;"	c
SearchResults	doxy_doku/html/search/search.js	/^function SearchResults(name)$/;"	c
SelectItemCount	doxy_doku/html/search/search.js	/^  this.SelectItemCount = function(id)$/;"	m	class:SearchBox
SelectItemSet	doxy_doku/html/search/search.js	/^  this.SelectItemSet = function(id)$/;"	m	class:SearchBox
Toggle	doxy_doku/html/search/search.js	/^    this.Toggle = function(id)$/;"	m	class:SearchResults
UPDATE	cmd_args.h	39;"	d
XML	cmd_args.h	36;"	d
_CMD_ARGS_H	cmd_args.h	24;"	d
_JSON_MASHINE_H	json_machine.h	25;"	d
_REQ_DATA	req_data.h	39;"	d
_STRUCT_H	struct.h	25;"	d
_UPDATE_SERVICE_H	update_service.h	25;"	d
_XML_HANDLER	xml_handler.h	25;"	d
append	xml_handler.c	/^append(struct_news ** lst, uint16_t * position,$/;"	f
b_dom_parser	struct.h	/^	bool b_dom_parser;$/;"	m	struct:s_adress
b_http	struct.h	/^	bool b_http;$/;"	m	struct:s_adress
b_json	struct.h	/^	bool b_json;$/;"	m	struct:s_adress
b_print	struct.h	/^	bool b_print;$/;"	m	struct:s_adress
b_update	struct.h	/^	bool b_update;$/;"	m	struct:s_adress
b_xml	struct.h	/^	bool b_xml;$/;"	m	struct:s_adress
bool	struct.h	/^typedef uint8_t bool;$/;"	t
buf	req_data.c	/^char buf[MAXDATASIZE];$/;"	v
check_for_updates	update_service.c	/^check_for_updates(const struct_news_list * new_list,$/;"	f
convertToId	doxy_doku/html/search/search.js	/^function convertToId(search)$/;"	f
createResults	doxy_doku/html/search/search.js	/^function createResults()$/;"	f
define-members	doxy_doku/html/main_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
delay_seconds	main.c	/^int delay_seconds = DELAY_SEC;$/;"	v
description	struct.h	/^	char *description;$/;"	m	struct:s_news
description_name	xml_handler.c	/^char *description_name = "description";$/;"	v
details	doxy_doku/html/main_8c.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
dom_parser	xml_handler.c	/^int dom_parser(const char *content, int length, struct_news_list * list_ptr)$/;"	f
element_counter	xml_handler.c	/^uint16_t element_counter = 0;$/;"	v
end	struct.h	/^	struct s_news *end;$/;"	m	struct:s_news_list	typeref:struct:s_news_list::s_news
false	struct.h	34;"	d
files	doxy_doku/html/dir_18ac266f5c98c28fed33420001746854.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	doxy_doku/html/dir_7e36e192c6196e2569cf03fbbcb3b44d.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
free_list	update_service.c	/^void free_list(struct_news_list * list)$/;"	f
func-members	doxy_doku/html/main_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
getXPos	doxy_doku/html/search/search.js	/^function getXPos(item)$/;"	f
getYPos	doxy_doku/html/search/search.js	/^function getYPos(item)$/;"	f
get_dom_objects	xml_handler.c	/^void get_dom_objects(xmlNode * a_node, struct_news_list * list_ptr)$/;"	f
get_in_addr	req_data.c	/^void *get_in_addr(struct sockaddr *sa)$/;"	f
get_rss_tag	xml_handler.c	/^char *get_rss_tag(char *temp_string, char *end_tag, const int *str_lenght)$/;"	f
get_server_address	cmd_args.c	/^    ** get_server_address(char *address_string, struct_adress ** addr_ptr)$/;"	f
get_server_info	xml_handler.c	/^char *get_server_info(char *xml_string, int startzeichen)$/;"	f
get_starttag	xml_handler.c	/^int get_starttag(const char *xml_string, const char *start_tag)$/;"	f
get_temp_string	xml_handler.c	/^char *get_temp_string(char *xml_string, int startzeichen, int str_lenght)$/;"	f
handle_options	cmd_args.c	/^void handle_options(char **argv, int *argc, struct_adress ** addr_pointer)$/;"	f
init_search	doxy_doku/html/search/search.js	/^function init_search()$/;"	f
initial_update	update_service.c	/^void initial_update(struct_news_list ** List, struct_adress ** address_options)$/;"	f
item_name	xml_handler.c	/^char *item_name = "item";$/;"	v
key	struct.h	/^	char *key;$/;"	m	struct:__anon1
key_from_string	cmd_args.c	/^int key_from_string(char *argv)$/;"	f
l00001	doxy_doku/html/graph_legend.html	/^<p>Consider the following example: <\/p><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;\/*! Invisible class because of truncation *\/<\/div><div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;class Invisible { };<\/div><div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;\/*! Truncated class, inheritance relation is hidden *\/<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;class Truncated : public Invisible { };<\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;\/* Class not documented with doxygen comments *\/<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;class Undocumented { };<\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;\/*! Class that is inherited using public inheritance *\/<\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;class PublicBase : public Truncated { };<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;\/*! A template class *\/<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;template&lt;class T&gt; class Templ { };<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;\/*! Class that is inherited using protected inheritance *\/<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;class ProtectedBase { };<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;\/*! Class that is inherited using private inheritance *\/<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;class PrivateBase { };<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;\/*! Class that is used by the Inherited class *\/<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;class Used { };<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;\/*! Super class that inherits a number of other classes *\/<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;class Inherited : public PublicBase,<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;                  protected ProtectedBase,<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;                  private PrivateBase,<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;                  public Undocumented,<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;                  public Templ&lt;int&gt;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;{<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;  private:<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;    Used *m_usedClass;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;};<\/div><\/div><!-- fragment --><p> This will result in the following graph:<\/p>$/;"	a
l00001	doxy_doku/html/req__data_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div><div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment"> * req_data.h<\/span><\/div><div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"> * <\/span><\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment"> * Copyright 2016 Stephan Avenwedde &lt;stephanpc@stepohan-ubuntu64&gt;<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"> * <\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment"> * This program is free software; you can redistribute it and\/or modify<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment"> * the Free Software Foundation; either version 2 of the License, or<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment"> * (at your option) any later version.<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment"> * <\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"> * GNU General Public License for more details.<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"> * <\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment"> * along with this program; if not, write to the Free Software<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment"> * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,<\/span><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment"> * MA 02110-1301, USA.<\/span><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment"> * <\/span><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment"> * <\/span><\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="comment"> *\/<\/span><\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;<\/span><\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor">#include &lt;string.h&gt;<\/span><\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor">#include &lt;stdlib.h&gt;<\/span><\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="preprocessor">#include &lt;sys\/types.h&gt;<\/span><\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="preprocessor">#include &lt;sys\/socket.h&gt;<\/span><\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<span class="preprocessor">#include &lt;netdb.h&gt;<\/span><\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<span class="preprocessor">#include &lt;arpa\/inet.h&gt;<\/span><\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<span class="preprocessor">#include &lt;netinet\/in.h&gt;<\/span><\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<span class="preprocessor">#include &quot;struct.h&quot;<\/span><\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<span class="preprocessor">#include &lt;unistd.h&gt;<\/span><\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<span class="preprocessor">#define PORT &quot;80&quot;<\/span><\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<span class="preprocessor">#define MAXDATASIZE 100000  <\/span><span class="comment">\/* maximale nummer an Bytes die empfangen werden kann *\/<\/span><span class="preprocessor"><\/span><\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<span class="preprocessor">#ifndef _REQ_DATA<\/span><\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<span class="preprocessor">#define _REQ_DATA<\/span><\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<span class="comment">\/* ohne POSIX-Compiler-Flag muss addrinfo bekannt gegeben werden *\/<\/span><\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<span class="preprocessor">#if 0<\/span><\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<span class="keyword">struct <\/span>addrinfo {<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;    <span class="keywordtype">int<\/span> ai_flags;<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;    <span class="keywordtype">int<\/span> ai_family;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;    <span class="keywordtype">int<\/span> ai_socktype;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;    <span class="keywordtype">int<\/span> ai_protocol;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;    socklen_t ai_addrlen;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;    <span class="keyword">struct <\/span>sockaddr *ai_addr;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;    <span class="keywordtype">char<\/span> *ai_canonname;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;    <span class="keyword">struct <\/span>addrinfo *ai_next;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;};<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<span class="keywordtype">void<\/span> *get_in_addr(<span class="keyword">struct<\/span> sockaddr *sa);<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<span class="keywordtype">char<\/span> *req_server(<span class="keyword">const<\/span> <a class="code" href="structs__adress.html">struct_adress<\/a> * rss_server);<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="structs__adress_html"><div class="ttname"><a href="structs__adress.html">s_adress<\/a><\/div><div class="ttdef"><b>Definition:<\/b> struct.h:55<\/div><\/div>$/;"	a
l00001	doxy_doku/html/struct_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div><div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment"> * struct.h<\/span><\/div><div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"> * <\/span><\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment"> * Copyright 2016 Stephan Avenwedde &lt;stephanpc@stepohan-ubuntu64&gt;<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"> * <\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment"> * This program is free software; you can redistribute it and\/or modify<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment"> * the Free Software Foundation; either version 2 of the License, or<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment"> * (at your option) any later version.<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment"> * <\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"> * GNU General Public License for more details.<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"> * <\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment"> * along with this program; if not, write to the Free Software<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment"> * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,<\/span><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment"> * MA 02110-1301, USA.<\/span><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment"> * <\/span><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment"> * <\/span><\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="comment"> *\/<\/span><\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor">#ifndef _STRUCT_H<\/span><\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor">#define _STRUCT_H<\/span><\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="preprocessor">#include &lt;stdint.h&gt;<\/span><\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="preprocessor">#include &lt;time.h&gt;<\/span><\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<span class="preprocessor">#define MAX_DOMAIN_LENGHT 200<\/span><\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<span class="preprocessor">#define MAX_REQUEST_LENGHT 500<\/span><\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<span class="comment">\/* s_news = Name des Struct *\/<\/span><\/div><div class="line"><a name="l00033"><\/a><span class="lineno"><a class="line" href="structs__news.html">   33<\/a><\/span>&#160;<span class="keyword">typedef<\/span> <span class="keyword">struct <\/span><a class="code" href="structs__news.html">s_news<\/a> {<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;    uint16_t position;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;    <span class="keywordtype">char<\/span> *title;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;    <span class="keywordtype">char<\/span> *description;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;    <span class="keywordtype">char<\/span> *link;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;    <span class="keyword">struct <\/span><a class="code" href="structs__news.html">s_news<\/a> *next;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;    <span class="keyword">struct <\/span><a class="code" href="structs__news.html">s_news<\/a> *previous;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;} <a class="code" href="structs__news.html">struct_news<\/a>;<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<span class="comment">\/* struct_news = Name für Variablendeklaration: struct_news VarName *\/<\/span><\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno"><a class="line" href="structs__news__list.html">   47<\/a><\/span>&#160;<span class="keyword">typedef<\/span> <span class="keyword">struct <\/span><a class="code" href="structs__news__list.html">s_news_list<\/a> {<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;    <span class="comment">\/* Enhthät bei Nachrichten die neuste Nachricht in der Liste *\/<\/span><\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;    <span class="keyword">struct <\/span><a class="code" href="structs__news.html">s_news<\/a> *start;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;    <span class="keyword">struct <\/span><a class="code" href="structs__news.html">s_news<\/a> *end;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;} <a class="code" href="structs__news__list.html">struct_news_list<\/a>;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<\/div><div class="line"><a name="l00055"><\/a><span class="lineno"><a class="line" href="structs__adress.html">   55<\/a><\/span>&#160;<span class="keyword">typedef<\/span> <span class="keyword">struct <\/span><a class="code" href="structs__adress.html">s_adress<\/a> {<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;    <span class="keywordtype">char<\/span> s_domain[MAX_DOMAIN_LENGHT];<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;    <span class="keywordtype">char<\/span> s_request[MAX_REQUEST_LENGHT];<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;} <a class="code" href="structs__adress.html">struct_adress<\/a>;<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div><div class="line"><a name="l00061"><\/a><span class="lineno"><a class="line" href="structtype__struct.html">   61<\/a><\/span>&#160;<span class="keyword">typedef<\/span> <span class="keyword">struct <\/span>{<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;    <span class="keywordtype">char<\/span> *key;<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;    <span class="keywordtype">int<\/span> val;<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;    <\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;    } <a class="code" href="structtype__struct.html">type_struct<\/a>;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="structs__news_html"><div class="ttname"><a href="structs__news.html">s_news<\/a><\/div><div class="ttdef"><b>Definition:<\/b> struct.h:33<\/div><\/div>$/;"	a
l00001	doxy_doku/html/update__service_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div><div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment"> * update_service.h<\/span><\/div><div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"> * <\/span><\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment"> * Copyright 2016 Stephan Avenwedde &lt;stephanpc@stepohan-ubuntu64&gt;<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"> * <\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment"> * This program is free software; you can redistribute it and\/or modify<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment"> * the Free Software Foundation; either version 2 of the License, or<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment"> * (at your option) any later version.<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment"> * <\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"> * GNU General Public License for more details.<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"> * <\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment"> * along with this program; if not, write to the Free Software<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment"> * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,<\/span><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment"> * MA 02110-1301, USA.<\/span><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment"> * <\/span><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment"> * <\/span><\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="comment"> *\/<\/span><\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor">#ifndef _UPDATE_SERVICE_H<\/span><\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor">#define _UPDATE_SERVICE_H<\/span><\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="preprocessor">#include &lt;inttypes.h&gt;<\/span><\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="preprocessor">#include &quot;struct.h&quot;<\/span><\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<span class="preprocessor">#include &lt;stdlib.h&gt;<\/span><\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;<\/span><\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<span class="preprocessor">#include &lt;string.h&gt;<\/span><\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<span class="keywordtype">void<\/span> update_assistant(<span class="keyword">const<\/span> uint16_t * milliseconds, <span class="keyword">const<\/span> uint16_t * seconds);<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<span class="keywordtype">void<\/span> initial_update(<a class="code" href="structs__news__list.html">struct_news_list<\/a> ** List, uint8_t print_flag);<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;uint8_t check_for_updates(<span class="keyword">const<\/span> <a class="code" href="structs__news__list.html">struct_news_list<\/a> * new_list,<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;              <span class="keyword">const<\/span> <a class="code" href="structs__news__list.html">struct_news_list<\/a> * old_list,<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;              <span class="keyword">const<\/span> uint16_t u16_intervall,<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;              <span class="keyword">const<\/span> uint8_t u8_print_flag);<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<span class="keywordtype">void<\/span> free_list(<a class="code" href="structs__news__list.html">struct_news_list<\/a> * list);<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="structs__news__list_html"><div class="ttname"><a href="structs__news__list.html">s_news_list<\/a><\/div><div class="ttdef"><b>Definition:<\/b> struct.h:47<\/div><\/div>$/;"	a
l00001	doxy_doku/html/xml__handler_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div><div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment"> * xml_handler.h<\/span><\/div><div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"> * <\/span><\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment"> * Copyright 2016 Stephan Avenwedde &lt;stephanpc@stepohan-ubuntu64&gt;<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"> * <\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment"> * This program is free software; you can redistribute it and\/or modify<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment"> * the Free Software Foundation; either version 2 of the License, or<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment"> * (at your option) any later version.<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment"> * <\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"> * GNU General Public License for more details.<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"> * <\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment"> * along with this program; if not, write to the Free Software<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment"> * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,<\/span><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment"> * MA 02110-1301, USA.<\/span><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment"> * <\/span><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment"> * <\/span><\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="comment"> *\/<\/span><\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor">#ifndef _XML_HANDLER<\/span><\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor">#define _XML_HANDLER<\/span><\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="preprocessor">#include &lt;stdint.h&gt;<\/span><\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="preprocessor">#include &lt;libxml\/xmlmemory.h&gt;<\/span><\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<span class="preprocessor">#include &lt;libxml\/parser.h&gt;<\/span><\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<span class="preprocessor">#include &lt;libxml\/xmlreader.h&gt;<\/span><\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;<\/span><\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<span class="preprocessor">#include &lt;string.h&gt;<\/span><\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<span class="preprocessor">#include &lt;stdlib.h&gt;<\/span><\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<span class="preprocessor">#include &quot;struct.h&quot;<\/span><\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<a class="code" href="structs__news__list.html">struct_news_list<\/a> *load_data(<span class="keywordtype">char<\/span> *xml_string);<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<span class="keywordtype">int<\/span> dom_parser(<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *content, <span class="keywordtype">int<\/span> length, <a class="code" href="structs__news__list.html">struct_news_list<\/a> * list_ptr);<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<span class="keywordtype">void<\/span> get_dom_objects(xmlNode * a_node, <a class="code" href="structs__news__list.html">struct_news_list<\/a> * list_ptr);<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<span class="keywordtype">char<\/span> *get_temp_string(<span class="keywordtype">char<\/span> *xml_string, <span class="keywordtype">int<\/span> startzeichen, <span class="keywordtype">int<\/span> str_lenght);<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<span class="keywordtype">char<\/span> *get_server_info(<span class="keywordtype">char<\/span> *xml_string, <span class="keywordtype">int<\/span> startzeichen);<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<span class="keywordtype">int<\/span> get_starttag(<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *xml_string, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *start_tag);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<span class="keywordtype">char<\/span> *get_rss_tag(<span class="keywordtype">char<\/span> *temp_string, <span class="keywordtype">char<\/span> *end_tag, <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> *str_lenght);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<span class="keywordtype">void<\/span> append(<a class="code" href="structs__news.html">struct_news<\/a> ** lst, uint16_t * position, <span class="keywordtype">char<\/span> *title, <span class="keywordtype">char<\/span> *link,<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;        <span class="keywordtype">char<\/span> *description, <a class="code" href="structs__news__list.html">struct_news_list<\/a> * list_ptr);<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="structs__news_html"><div class="ttname"><a href="structs__news.html">s_news<\/a><\/div><div class="ttdef"><b>Definition:<\/b> struct.h:33<\/div><\/div>$/;"	a
letter_s	doxy_doku/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_s"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;s&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_t	doxy_doku/html/classes.html	/^<\/td><td valign="top"><a class="el" href="structs__news.html">s_news<\/a>&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_t"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;t&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
link	struct.h	/^	char *link;$/;"	m	struct:s_news
link_name	xml_handler.c	/^char *link_name = "link";$/;"	v
load_data	xml_handler.c	/^struct_news_list *load_data(struct_adress * meta_info)$/;"	f
lookuptable	cmd_args.c	/^static type_struct lookuptable[] = {$/;"	v	file:
main	main.c	/^int main(int argc, char **argv)$/;"	f
next	struct.h	/^	struct s_news *next;$/;"	m	struct:s_news	typeref:struct:s_news::s_news
option_counter	cmd_args.c	/^uint8_t option_counter = false;$/;"	v
position	struct.h	/^	uint16_t position;$/;"	m	struct:s_news
previous	struct.h	/^	struct s_news *previous;$/;"	m	struct:s_news	typeref:struct:s_news::s_news
process_json	json_machine.c	/^void process_json(struct_news_list ** List, struct_adress ** address_options)$/;"	f
pub-attribs	doxy_doku/html/structs__adress.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	doxy_doku/html/structs__news.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	doxy_doku/html/structs__news__list.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	doxy_doku/html/structtype__struct.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
req_server	req_data.c	/^void req_server(struct_adress * rss_server)$/;"	f
s_adress	struct.h	/^typedef struct s_adress {$/;"	s
s_domain	struct.h	/^	char *s_domain;$/;"	m	struct:s_adress
s_news	struct.h	/^typedef struct s_news {$/;"	s
s_news_list	struct.h	/^typedef struct s_news_list {$/;"	s
s_raw_string	struct.h	/^	char *s_raw_string;$/;"	m	struct:s_adress
s_request	struct.h	/^	char *s_request;$/;"	m	struct:s_adress
searchData	doxy_doku/html/search/all_0.js	/^var searchData=$/;"	v
searchData	doxy_doku/html/search/all_1.js	/^var searchData=$/;"	v
searchData	doxy_doku/html/search/all_2.js	/^var searchData=$/;"	v
searchData	doxy_doku/html/search/all_3.js	/^var searchData=$/;"	v
searchData	doxy_doku/html/search/all_4.js	/^var searchData=$/;"	v
searchData	doxy_doku/html/search/all_5.js	/^var searchData=$/;"	v
searchData	doxy_doku/html/search/classes_0.js	/^var searchData=$/;"	v
searchData	doxy_doku/html/search/classes_1.js	/^var searchData=$/;"	v
searchData	doxy_doku/html/search/files_0.js	/^var searchData=$/;"	v
searchData	doxy_doku/html/search/functions_0.js	/^var searchData=$/;"	v
searchData	doxy_doku/html/search/pages_0.js	/^var searchData=$/;"	v
searchData	doxy_doku/html/search/pages_1.js	/^var searchData=$/;"	v
search_keyword	struct.h	/^	char *search_keyword;$/;"	m	struct:s_adress
setClassAttr	doxy_doku/html/search/search.js	/^function setClassAttr(elem,attr)$/;"	f
setKeyActions	doxy_doku/html/search/search.js	/^function setKeyActions(elem,action)$/;"	f
set_default_options	cmd_args.c	/^void set_default_options(struct_adress ** str_addr)$/;"	f
set_server_adress_struct	cmd_args.c	/^set_server_adress_struct(const char *domain,$/;"	f
start	struct.h	/^	struct s_news *start;$/;"	m	struct:s_news_list	typeref:struct:s_news_list::s_news
start_licence	text.h	/^const char *start_licence =$/;"	v
struct_adress	struct.h	/^} struct_adress;$/;"	t	typeref:struct:s_adress
struct_news	struct.h	/^} struct_news;$/;"	t	typeref:struct:s_news
struct_news_list	struct.h	/^} struct_news_list;$/;"	t	typeref:struct:s_news_list
subdirs	doxy_doku/html/dir_6a9a39e4f5c099a3033e520e52a9878d.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="subdirs"><\/a>$/;"	a
subdirs	doxy_doku/html/dir_d183640e40a33609680d7762fa106595.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="subdirs"><\/a>$/;"	a
temp_description	xml_handler.c	/^char *temp_description;$/;"	v
temp_link	xml_handler.c	/^char *temp_link;$/;"	v
temp_title	xml_handler.c	/^char *temp_title;$/;"	v
test_arg	cmd_args.c	/^void test_arg(char **argv)$/;"	f
title	struct.h	/^	char *title;$/;"	m	struct:s_news
title_name	xml_handler.c	/^char *title_name = "title";$/;"	v
toggleFolder	doxy_doku/html/dynsections.js	/^function toggleFolder(id)$/;"	f
toggleInherit	doxy_doku/html/dynsections.js	/^function toggleInherit(id)$/;"	f
toggleLevel	doxy_doku/html/dynsections.js	/^function toggleLevel(level)$/;"	f
toggleVisibility	doxy_doku/html/dynsections.js	/^function toggleVisibility(linkObj)$/;"	f
true	struct.h	33;"	d
type_struct	struct.h	/^} type_struct;$/;"	t	typeref:struct:__anon1
u16_update_interval_seconds	struct.h	/^	uint16_t u16_update_interval_seconds;$/;"	m	struct:s_adress
updateStripes	doxy_doku/html/dynsections.js	/^function updateStripes()$/;"	f
update_assistant	update_service.c	/^void update_assistant(const uint16_t * milliseconds, const uint16_t * seconds)$/;"	f
val	struct.h	/^	int val;$/;"	m	struct:__anon1
var-members	doxy_doku/html/main_8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"><\/a>$/;"	a
